{
  "_from": "passport-google-plus-token",
  "_id": "passport-google-plus-token@2.1.0",
  "_inBundle": false,
  "_integrity": "sha1-Feaazr7qGGwwWWW5PGsrWCBjJE0=",
  "_location": "/passport-google-plus-token",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "passport-google-plus-token",
    "fetchSpec": "latest",
    "name": "passport-google-plus-token",
    "raw": "passport-google-plus-token",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/passport-google-plus-token/-/passport-google-plus-token-2.1.0.tgz",
  "_shasum": "15e69acebeea186c305965b93c6b2b582063244d",
  "_spec": "passport-google-plus-token",
  "_where": "F:\\Stage\\wakahaw\\nodejs\\eservice_api",
  "author": {
    "email": "ghaiklor@gmail.com",
    "name": "Eugene Obrezkov",
    "url": "https://github.com/ghaiklor"
  },
  "bugs": {
    "url": "https://github.com/ghaiklor/passport-google-plus-token/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "passport-oauth": "1.0.0"
  },
  "deprecated": false,
  "description": "Passport strategy for authenticating with Google Plus via OAuth2 access tokens",
  "devDependencies": {
    "babel-cli": "6.4.5",
    "babel-plugin-add-module-exports": "0.1.2",
    "babel-preset-es2015": "6.3.13",
    "chai": "3.4.1",
    "chai-passport-strategy": "0.2.0",
    "coveralls": "2.11.6",
    "cz-conventional-changelog": "1.1.5",
    "isparta": "4.0.0",
    "mocha": "2.4.2",
    "semantic-release": "4.3.5",
    "sinon": "1.17.3"
  },
  "homepage": "https://github.com/ghaiklor/passport-google-plus-token",
  "keywords": [
    "auth",
    "authentication",
    "google",
    "passport",
    "plus",
    "token"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "passport-google-plus-token",
  "optionalDependencies": {},
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "# passport-google-plus-token\n\n![Build Status](https://img.shields.io/travis/ghaiklor/passport-google-plus-token.svg)\n![Coverage](https://img.shields.io/coveralls/ghaiklor/passport-google-plus-token.svg)\n\n![Downloads](https://img.shields.io/npm/dm/passport-google-plus-token.svg)\n![Downloads](https://img.shields.io/npm/dt/passport-google-plus-token.svg)\n![npm version](https://img.shields.io/npm/v/passport-google-plus-token.svg)\n![License](https://img.shields.io/npm/l/passport-google-plus-token.svg)\n\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n![dependencies](https://img.shields.io/david/ghaiklor/passport-google-plus-token.svg)\n![dev dependencies](https://img.shields.io/david/dev/ghaiklor/passport-google-plus-token.svg)\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Google Plus](https://plus.google.com/) access tokens using the OAuth 2.0 API.\n\nThis module lets you authenticate using Google Plus in your Node.js applications.\nBy plugging into Passport, Google Plus authentication can be easily and unobtrusively integrated into any application or framework that supports [Connect](http://www.senchalabs.org/connect/)-style middleware, including [Express](http://expressjs.com/).\n\n## Installation\n\n```shell\nnpm install passport-google-plus-token\n```\n\n## Usage\n\n### Configure Strategy\n\nThe Google Plus authentication strategy authenticates users using a Google Plus account and OAuth 2.0 tokens.\nThe strategy requires a `verify` callback, which accepts these credentials and calls `next` providing a user, as well as `options` specifying a app ID and app secret.\n\n```javascript\nvar GooglePlusTokenStrategy = require('passport-google-plus-token');\n\npassport.use(new GooglePlusTokenStrategy({\n    clientID: GOOGLE_CLIENT_ID,\n    clientSecret: GOOGLE_CLIENT_SECRET,\n    passReqToCallback: true\n}, function(req, accessToken, refreshToken, profile, next) {\n    User.findOrCreate({'google.id': profile.id}, function(error, user) {\n        return next(error, user);\n    });\n}));\n```\n\n### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `google-plus-token` strategy, to authenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/) application:\n\n```javascript\napp.get('/auth/google', passport.authenticate('google-plus-token'));\n```\n\nOr if you are using Sails framework:\n\n```javascript\n// AuthController.js\nmodule.exports = {\n    google: function(req, res) {\n        passport.authenticate('google-plus-token', function(error, user, info) {\n            if (error) return res.serverError(error);\n            if (info) return res.unauthorized(info);\n            return res.ok(user);\n        })(req, res);\n    }\n};\n```\n\nThe request to this route should include GET or POST data with the keys `access_token` and optionally, `refresh_token` set to the credentials you receive from Google Plus.\n\n```\nGET /auth/google?access_token=<GOOGLE_TOKEN>\n```\n\n## Issues\n\nIf you receive a `401 Unauthorized` error, it is most likely because you have wrong access token or not yet specified any application permissions.\nOnce you refresh access token with new permissions, try to send this access token again.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Eugene Obrezkov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "release": {
    "branch": "master"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ghaiklor/passport-google-plus-token.git"
  },
  "scripts": {
    "compile": "babel src --out-dir lib",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "prepublish": "npm run compile",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "babel-node ./node_modules/.bin/isparta cover _mocha"
  },
  "version": "2.1.0"
}
